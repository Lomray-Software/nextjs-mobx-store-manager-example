import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {GetServerSideProps} from "next";
import {FC} from "react";
import HomePage from "../store/HomePage";
import {StoresType, withStores} from "@lomray/react-mobx-manager";
import {initializeManager} from "../store/manager";

const Home: FC<{ pageStore: HomePage }> = ({ pageStore}) => {
    const { name, nameFromApi } = pageStore;

    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className={styles.main}>
                Example NextJs with React Mobx Store
                <div>{name}</div>
                <div>{nameFromApi}</div>
            </main>
        </div>
    )
}

const stores = {
    pageStore: HomePage,
}

// @ts-ignore
Home.contextId = 'ssr';

export default withStores(Home, stores);

// @TODO we need write something like this: https://github.com/kirill-konshin/next-redux-wrapper#pagegetinitialprops
// export const getServerSideProps = manager.getInitialPageProps(async ({ req, res, stores }) => {
// export const getServerSideProps = manager.getInitialPageProps(stores => async ({ req, res, stores }) => {
//     const { pageStore } = stores;
//
//     pageStore.setName('From server');
//     await pageStore.getNameFromApi();
// }, Home, stores);

export const getServerSideProps: GetServerSideProps = async ({req, res}) => {
    const manager = initializeManager();
    const map = Object.entries(stores);
    const { pageStore } = manager.createStores(
        map,
        'root',
        // @ts-ignore
        manager.createContextId(Home.contextId),
        'Home'
    ) as StoresType<typeof stores>;

    pageStore.setName('From server');
    await pageStore.getNameFromApi();

    return {
        props: {
            initialMobxState: manager.toJSON(),
        },
    }
}
